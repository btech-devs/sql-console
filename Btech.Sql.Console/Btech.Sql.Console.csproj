<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>disable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44470</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Google.Apis.CloudResourceManager.v1" Version="1.59.0.2796" />
        <PackageReference Include="Google.Cloud.SecretManager.V1" Version="2.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.11" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.11" />
        <PackageReference Include="Microsoft.Data.SqlClient" Version="5.0.1" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.1" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
        <PackageReference Include="RestSharp" Version="108.0.3" />
        <PackageReference Include="RestSharp.Serializers.NewtonsoftJson" Version="108.0.3" />
        <PackageReference Include="Serilog.AspNetCore" Version="6.1.0" />
        <PackageReference Include="Npgsql" Version="6.0.7" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.4.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.4.0" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.25.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Btech.Core.Database\Btech.Core.Database.csproj" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="Migrations\Scripts\001.create-auth_session.pgsql" />
      <EmbeddedResource Include="Migrations\Scripts\001.create-user_sessions.pgsql">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </EmbeddedResource>
      <None Remove="Migrations\Scripts\002.create-db_session.pgsql" />
      <EmbeddedResource Include="Migrations\Scripts\002.create-db_sessions.pgsql">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </EmbeddedResource>
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>